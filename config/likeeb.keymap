#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        lang_switch {
            bindings = <&kp LC(SPACE)>;
            key-positions = <20 10>;
        };

        kp_bslh {
            bindings = <&kp BACKSLASH>;
            key-positions = <0 10>;
        };

        kp_lbkt {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <9 19>;
        };

        kp_rbkt {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <8 18>;
        };

        kp_apos {
            bindings = <&kp APOS>;
            key-positions = <19 29>;
        };

        m_bt_clear {
            bindings = <&bt BT_CLR>;
            key-positions = <32 6 7>;
        };

        m_bt_disc_1 {
            bindings = <&bt BT_DISC 1>;
            key-positions = <32 12 26>;
        };
    };

    macros {
        m_arrow: m_arrow {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp MINUS &kp GT>;
            label = "M_ARROW";
        };

        m_darrow: m_darrow {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp EQUAL &kp GT>;
            label = "M_DARROW";
        };

        m_this: m_this {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp DLLR &kp F &kp M &kp L &kp D &kp MINUS &kp GT>;
            label = "M_THIS";
        };
    };

    behaviors {
        lht: left-hold-tap {
            compatible = "zmk,behavior-hold-tap";
            label = "LHT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            flavor = "balanced";
            hold-trigger-key-positions = <29 19 9 28 18 8 27 17 7 26 16 6 5 15 25>;
        };

        rht: right-hold-tap {
            compatible = "zmk,behavior-hold-tap";
            label = "RHT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            flavor = "balanced";
            hold-trigger-key-positions = <0 10 20 21 11 1 22 12 2 3 13 23 24 14 4>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Base {
            bindings = <
&kp Q         &kp W        &kp E        &kp R         &kp T        &kp Y         &kp U         &kp I            &kp O        &kp P
&lht LCTRL A  &lht LALT S  &lht LGUI D  &lht LSHFT F  &kp G        &kp H         &rht RSHFT J  &rht RGUI K      &rht RALT L  &rht RCTRL SEMI
&kp Z         &kp X        &kp C        &kp V         &kp B        &kp N         &kp M         &kp COMMA        &kp DOT      &kp FSLH
                           &lt 4 SPACE  &lt 5 TAB     &lt 1 ESC    &lt 2 RETURN  &kp RSHIFT    &lt 3 BACKSPACE
            >;
        };

        Media {
            bindings = <
&trans     &trans    &trans    &trans     &trans    &kp C_VOL_UP  &trans        &trans        &trans        &bootloader
&kp LCTRL  &kp LALT  &kp LGUI  &kp LSHFT  &trans    &kp C_VOL_DN  &kp C_PREV    &kp C_PP      &kp C_NEXT    &trans
&trans     &trans    &trans    &trans     &trans    &kp C_MUTE    &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3
                     &trans    &trans     &trans    &trans        &trans        &trans
            >;
        };

        Sym {
            bindings = <
&kp GRAVE  &kp AT     &kp LPAR    &kp RPAR  &kp EXCL         &m_darrow  &trans     &trans    &trans    &trans
&kp HASH   &kp QMARK  &kp LBKT    &kp RBKT  &kp AMPERSAND    &m_this    &kp RSHFT  &kp RGUI  &kp RALT  &kp RCTRL
&kp FSLH   &kp BSLH   &kp LT      &kp GT    &kp PIPE         &m_arrow   &trans     &trans    &trans    &trans
                      &kp DOLLAR  &trans    &trans           &trans     &trans     &trans
            >;
        };

        Num {
            bindings = <
&kp CARET  &kp N7  &kp N8  &kp N9   &kp EQUAL    &trans  &trans     &trans    &trans    &trans
&kp STAR   &kp N4  &kp N5  &kp N6   &kp PLUS     &trans  &kp RSHFT  &kp RGUI  &kp RALT  &kp RCTRL
&kp SLASH  &kp N1  &kp N2  &kp N3   &kp MINUS    &trans  &trans     &trans    &trans    &trans
                   &kp N0  &kp DOT  &kp SPACE    &trans  &trans     &trans
            >;
        };

        Nav {
            bindings = <
&trans     &trans    &trans    &trans     &trans    &kp PG_UP  &kp HOME   &kp UP     &kp END    &kp LG(LS(Z))
&kp LCTRL  &kp LALT  &kp LGUI  &kp LSHFT  &trans    &kp PG_DN  &kp LEFT   &kp DOWN   &kp RIGHT  &kp LG(Z)
&trans     &trans    &trans    &trans     &trans    &trans     &kp LG(B)  &kp LG(C)  &kp LG(X)  &kp CAPSLOCK
                     &trans    &trans     &trans    &trans     &trans     &trans
            >;
        };

        Fun {
            bindings = <
&trans     &trans    &trans    &trans     &trans    &trans          &kp F7  &kp F8  &kp F9  &kp F12
&kp LCTRL  &kp LALT  &kp LGUI  &kp LSHFT  &trans    &trans          &kp F4  &kp F5  &kp F6  &kp F11
&trans     &trans    &trans    &trans     &trans    &kp LS(LG(N4))  &kp F1  &kp F2  &kp F3  &kp F10
                     &trans    &trans     &trans    &trans          &trans  &trans
            >;
        };
    };
};
